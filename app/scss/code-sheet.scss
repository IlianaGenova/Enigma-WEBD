@import "main";

.grid-container {
	// height: 100hv;
	display: grid;
	grid-template-columns: 100px 75px 75px 450px 1fr 100px 170px 170px 170px 20px;
	grid-template-rows: 80px 650px 1fr 70px;
	// grid-template-areas:
	// 	"topnav topnav topnav topnav topnav";

	.top-nav {
		grid-column: 1/11;
		grid-row: 1/2;

		background-color: $dark-blue;
		opacity: 0.85;
		//box-shadow: 10px 0px 15px -2px rgba(0, 0, 0, 0.8);
		box-shadow: 0px 5px 30px $darkest;
		display: flex;
		flex-flow: row wrap;
		justify-content: space-between;
		align-items: center;

		.buttons {
			display: flex;
			flex-flow: row wrap;
			justify-content: space-around;
			align-items: baseline;
			margin-right: 20px;
		}

	}

	.banner-wrapper {
		grid-column: 1/11;
		grid-row: 3/4;

		position: relative;
		text-align: center;
		font: 1.2em Arial, sans-serif;

		.banner {
			opacity: 0.85;
			width: 100%;
		}


	}
}


$colors: (
    background: $light-blue,
    text: $text-blue
);

$font: (
    family: sans-serif,
    size: 100px,
    letter-spacing: 0
);

$config: (
    animated: false,
    nb-letters: 16,
    animation-length: 4s,
    mask-letters: ("0", "1", "2", "3", "4", "5", "6", "7", "8", "9")
);

// ----------------------------------

@function color($value) {
    @return map-get($colors, $value);
}

@function font($value) {
    @return map-get($font, $value);
}

@function config($value) {
    @return map-get($config, $value);
}

@function random-string($list) {
    $result: null;
    @for $i from 1 through length($list) {
        $random: random(length($list));
        $current: nth($list, $random);
        $list: remove-nth($list, $random);
        $result: $result#{$current};
    }
    @return $result;
}

@function remove-nth($list, $index) {
    $result: ();
    @for $i from 1 through length($list) {
        @if $i != $index {
            $result: append($result, nth($list, $i));
        }
    }
    @return $result;
}

@mixin respond-to($breakpoint) {
    @if type-of($breakpoint) == list {
        @media (min-width: nth($breakpoint, 1)) and (max-width: nth($breakpoint, 2)) {
            @content;
        }
    }
    @else {
        @media (max-width: $breakpoint) {
            @content;
        }
    }
}

// ----------------------------------

body {
    text-align: center;
    background-color: color(background);
}

.wrapper {
    position: absolute;

    top: 35%;
    left: 50%;
    width: 75%;
    font-size: 0;
    transform: translate(-50%);

}

p {
	margin-top: 30px;
    font-family: font(family);
    font-size: 25px;
    font-weight: 500;
    color: $darkest;
    opacity: 0.5;
}

.accent {
	opacity: 0.6;
	border-bottom: 2px 1.5px solid $text-blue;
	font-size: 26px;
	margin: 10px 0px;
}
.letter {

	transform: translate3d($d,-$d,0);
	text-shadow: 0.007em 0.055em 6px $dark-blue,
					0.025em 0.08em 3px $blue;
	opacity: 0.8;
	color: $front;
    width: font(size);
    display: inline-block;
    vertical-align: middle;
    position: relative;
    overflow: hidden;
    margin: 0 -5px;
    font-family: Futura, sans-serif;
    font-size: 100px;
    font-weight: 500;
    line-height: font(size);
    text-transform: uppercase;
    color: color(text);
    @include respond-to(625px) {
        //font-size: 16px;
        //width: 18px;
    }
    &:before {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        word-break: break-all;
        background-color: color(background);
    }
}

// ----------------------------------

@for $i from 1 through config(nb-letters) {
    $length: length(config(mask-letters));
    $random: random($length);
    $steps: $random - 1;
    $offset: font(size) * $steps * -1;
    $delay: random(100) / 100;
      $duration: $steps * (config(animation-length) / $random);
    .letter:nth-child(#{$i}):before {
        content: quote(random-string(config(mask-letters)));
        margin-top: $offset;
        animation-name: letter#{$i};
        animation-duration: $duration - ($duration * $delay);
        animation-delay: $delay * 1s;
        animation-fill-mode: forwards;
    }
    @keyframes letter#{$i} {
        from {
            margin-top: $offset;
        }
        to {
            margin-top: font(size);
        }
    }
}



footer {
	grid-column: 1/11;
	grid-row: 4/5;
	background-color: $dark-blue;
	opacity: 0.7;
	display: flex;
}
